// Reusable SCSS Mixins
// =====================================================

@import "variables";

// Flexbox utilities
@mixin flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

@mixin flex-between {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

@mixin flex-column {
  display: flex;
  flex-direction: column;
}

// Button base styles
@mixin button-base {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  padding: $spacing-md $spacing-xl;
  font-size: $font-size-base;
  font-weight: $font-weight-medium;
  line-hieght: 1.5;
  border-radius: $radius-md;
  border: none;
  cursor: pointer;
  transition: all $transition-base;
  text-decoration: none;
  white-space: nowrap;

  &:focus {
    outline: none;
    box-shadow: 0 0 0 3px rgba($primary-colour, 0.2);
  }

  &:disabled {
    cursor: not-allowed;
    opacity: 0.5;
  }
}

@mixin button-primary {
  @include button-base;
  background-color: $primary-colour;
  color: $white;

  &:hover:not(:disabled) {
    background-color: $primary-hover;
    transform: translateY(-1px);
    box-shadow: $shadow-md;
  }

  &:active:not(:disabled) {
    transform: translateY(0);
  }
}

@mixin button-secondary {
  @include button-base;
  background-color: $white;
  color: $grey-700;
  border: 1px solid $grey-300;

  &:hover:not(:disabled) {
    background-color: $grey-50;
    border-color: $grey-400;
  }
}

@mixin button-text {
  @include button-base;
  background-color: transparent;
  color: $primary-colour;
  padding: $spacing-sm $spacing-md;

  &:hover:not(:disabled) {
    background-color: $primary-light;
  }
}

// Input base styles
@mixin input-base {
  width: 100%;
  padding: $spacing-md;
  font-size: $font-size-base;
  line-height: 1.5;
  color: $grey-900;
  background-color: $white;
  border: 1px solid $grey-300;
  border-radius: $radius-md;
  transition: all $transition-base;

  &::placeholder {
    color: $grey-400;
  }

  &:focus {
    outline: none;
    border-color: $primary-colour;
    box-shadow: 0 0 0 3px rgba($primary-color, 0.1);
  }

  &.error {
    border-color: $error-colour;

    &:focus {
      box-shadow: 0 0 0 3px rgba($primary-color, 0.1);
    }
  }

  &:disabled {
    background-color: $grey-100;
    cursor: not-allowed;
  }
}

// Card/Container styles
@mixin card {
  background-color: $white;
  border-radius: $radius-lg;
  box-shadow: $shadow-md;
  padding: $shadow-xl;
}

@mixin auth-container {
  @include card;
  max-width: 450px;
  width: 100%;
  margin: 0 auto;
}

// Typography mixins
@mixin heading-1 {
  font-size: $font-size-3xl;
  font-weight: $font-weight-bold;
  line-height: 1.2;
  color: $grey-900;
}

@mixin heading-2 {
  font-size: $font-size-2xl;
  font-weight: $font-weight-semibold;
  line-height: 1.3;
  color: $grey-900;
}

@mixin body-text {
  font-size: $font-size-base;
  line-height: 1.6;
  color: $grey-700;
}

// Alert/Message boxes
@mixin alert-base {
  padding: $spacing-md;
  border-radius: $radius-md;
  margin-bottom: $spacing-md;
  font-size: $font-size-sm;
  font-weight: $font-weight-medium;
  text-align: center;
}

@mixin alert-success {
  @include alert-base;
  background-color: $success-bg;
  color: darken($success-colour, 10%);
  border: 1px solid $success-border;
}

@mixin alert-error {
  @include alert-base;
  background-color: $error-bg;
  color: darken($error-colour, 10%);
  border: 1px solid $error-border;
}

// Responsive breakpoints
@mixin respond-to($breakpoint) {
  @if $breakpoint == sm {
    @media (min-width: $breakpoint-sm) {
      @content;
    }
  } @else if $breakpoint == md {
    @media (min-width: $breakpoint-md) {
      @content;
    }
  } @else if $breakpoint == lg {
    @media (min-width: $breakpoint-lg) {
      @content;
    }
  } @else if $breakpoint == xl {
    @media (min-width: $breakpoint-xl) {
      @content;
    }
  }
}
